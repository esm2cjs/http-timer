{
  "version": 3,
  "sources": ["../esm/index.js"],
  "sourcesContent": ["import { errorMonitor } from 'events';\nimport { types } from 'util';\nimport deferToConnect from 'defer-to-connect';\nconst timer = (request) => {\n    if (request.timings) {\n        return request.timings;\n    }\n    const timings = {\n        start: Date.now(),\n        socket: undefined,\n        lookup: undefined,\n        connect: undefined,\n        secureConnect: undefined,\n        upload: undefined,\n        response: undefined,\n        end: undefined,\n        error: undefined,\n        abort: undefined,\n        phases: {\n            wait: undefined,\n            dns: undefined,\n            tcp: undefined,\n            tls: undefined,\n            request: undefined,\n            firstByte: undefined,\n            download: undefined,\n            total: undefined,\n        },\n    };\n    request.timings = timings;\n    const handleError = (origin) => {\n        origin.once(errorMonitor, () => {\n            timings.error = Date.now();\n            timings.phases.total = timings.error - timings.start;\n        });\n    };\n    handleError(request);\n    const onAbort = () => {\n        timings.abort = Date.now();\n        timings.phases.total = timings.abort - timings.start;\n    };\n    request.prependOnceListener('abort', onAbort);\n    const onSocket = (socket) => {\n        timings.socket = Date.now();\n        timings.phases.wait = timings.socket - timings.start;\n        if (types.isProxy(socket)) {\n            return;\n        }\n        const lookupListener = () => {\n            timings.lookup = Date.now();\n            timings.phases.dns = timings.lookup - timings.socket;\n        };\n        socket.prependOnceListener('lookup', lookupListener);\n        deferToConnect(socket, {\n            connect: () => {\n                timings.connect = Date.now();\n                if (timings.lookup === undefined) {\n                    socket.removeListener('lookup', lookupListener);\n                    timings.lookup = timings.connect;\n                    timings.phases.dns = timings.lookup - timings.socket;\n                }\n                timings.phases.tcp = timings.connect - timings.lookup;\n            },\n            secureConnect: () => {\n                timings.secureConnect = Date.now();\n                timings.phases.tls = timings.secureConnect - timings.connect;\n            },\n        });\n    };\n    if (request.socket) {\n        onSocket(request.socket);\n    }\n    else {\n        request.prependOnceListener('socket', onSocket);\n    }\n    const onUpload = () => {\n        timings.upload = Date.now();\n        timings.phases.request = timings.upload - (timings.secureConnect ?? timings.connect);\n    };\n    if (request.writableFinished) {\n        onUpload();\n    }\n    else {\n        request.prependOnceListener('finish', onUpload);\n    }\n    request.prependOnceListener('response', (response) => {\n        timings.response = Date.now();\n        timings.phases.firstByte = timings.response - timings.upload;\n        response.timings = timings;\n        handleError(response);\n        response.prependOnceListener('end', () => {\n            request.off('abort', onAbort);\n            response.off('aborted', onAbort);\n            if (timings.phases.total) {\n                // Aborted or errored\n                return;\n            }\n            timings.end = Date.now();\n            timings.phases.download = timings.end - timings.response;\n            timings.phases.total = timings.end - timings.start;\n        });\n        response.prependOnceListener('aborted', onAbort);\n    });\n    return timings;\n};\nexport default timer;\n"],
  "mappings": "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",
  "names": ["deferToConnect"]
}
